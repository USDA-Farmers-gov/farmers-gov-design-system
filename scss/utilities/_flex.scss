$flexWrap: wrap, "wrap-reverse", nowrap;
$flexJustifyContent: "flex-start", "flex-end", center, end, "space-between",
  "space-around", "space-evenly";
$flexAlignItems: start, end, center, "space-between", "space-around",
  "space-evenly";
$mobileSizes: "l", "m", "s";

@function get-viewport-size($size) {
  @if ($size == "l") {
    @return $screen--L;
  }
  @if ($size == "m") {
    @return $screen--M;
  }
  @if ($size == "s") {
    @return $screen--S;
  }
  @return 0;
}

.flex {
  display: flex;
}
.flex-no-alter {
  flex: 0 0 auto;
}
.inline-flex {
  display: inline-flex;
}
.flex-row {
  flex-direction: row;
}
.flex-row-reverse {
  flex-direction: row-reverse;
}
.flex-column {
  flex-direction: column;
}
.flex-column-reverse {
  flex-direction: column-reverse;
}
.flex-no-resize {
  flex: 0 0 auto;
}
.align-self-auto {
  align-self: auto;
}
.align-self-normal {
  align-self: normal;
}
.align-self-center {
  align-self: center;
}
.align-self-stretch {
  align-self: stretch;
}
.align-self-start {
  align-self: start;
}
.align-self-end {
  align-self: end;
}
.align-self-flex-start {
  align-self: flex-start;
}
.align-self-flex-end {
  align-self: flex-end;
}
@each $wrap in $flexWrap {
  .flex-#{$wrap} {
    flex-wrap: #{$wrap};
  }
}
@each $size in $mobileSizes {
  $viewportSize: get-viewport-size($size);
  @media (max-width: $viewportSize) {
    .flex-column-#{$size} {
      flex-direction: column;
    }
  }
}
@each $size in $mobileSizes {
  $viewportSize: get-viewport-size($size);
  @media (max-width: $viewportSize) {
    .flex-row-#{$size} {
      flex-direction: row;
    }
  }
}
@each $flexJustify in $flexJustifyContent {
  .flex-justify-content-#{$flexJustify} {
    justify-content: #{$flexJustify};
  }
}
@each $flexAlign in $flexAlignItems {
  .flex-align-items-#{$flexAlign} {
    align-items: #{$flexAlign};
  }
}

@each $size in $mobileSizes {
  $viewportSize: get-viewport-size($size);
  @media (max-width: $viewportSize) {
    .flex-column-reverse-#{$size} {
      flex-direction: column-reverse !important;
    }
    // LEGACY
    .flex-column-reverse-mobile-#{$size} {
      flex-direction: column-reverse !important;
    }
  }
}
@each $size in $mobileSizes {
  $viewportSize: get-viewport-size($size);
  @media (max-width: $viewportSize) {
    .flex-row-reverse-#{$size} {
      flex-direction: row-reverse !important;
    }
    // LEGACY
    .flex-row-reverse-mobile-#{$size} {
      flex-direction: row-reverse !important;
    }
  }
}
